/* Generated By:JJTree: Do not edit this line. SQLRid.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=true,TRACK_TOKENS=true,NODE_PREFIX=O,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package com.jetbrains.youtrack.db.internal.core.sql.parser;

import com.jetbrains.youtrack.db.internal.core.command.BasicCommandContext;
import com.jetbrains.youtrack.db.internal.core.command.CommandContext;
import com.jetbrains.youtrack.db.internal.core.db.DatabaseSessionInternal;
import com.jetbrains.youtrack.db.api.record.Identifiable;
import com.jetbrains.youtrack.db.internal.core.id.RecordId;
import com.jetbrains.youtrack.db.api.query.Result;
import com.jetbrains.youtrack.db.internal.core.sql.executor.ResultInternal;
import java.util.Map;
import java.util.Objects;

public class SQLRid extends SimpleNode {

  protected SQLInteger cluster;
  protected SQLInteger position;

  protected SQLExpression expression;
  protected boolean legacy;

  public SQLRid(int id) {
    super(id);
  }

  public SQLRid(YouTrackDBSql p, int id) {
    super(p, id);
  }

  @Override
  public String toString(String prefix) {
    return "#" + cluster.getValue() + ":" + position.getValue();
  }

  public void toString(Map<Object, Object> params, StringBuilder builder) {
    if (legacy || (expression == null && cluster != null && position != null)) {
      builder.append("#" + cluster.getValue() + ":" + position.getValue());
    } else {
      builder.append("{\"@rid\":");
      expression.toString(params, builder);
      builder.append("}");
    }
  }

  public void toGenericStatement(StringBuilder builder) {
    if (legacy || (expression == null && cluster != null && position != null)) {
      builder.append(PARAMETER_PLACEHOLDER);
    } else {
      builder.append("{\"@rid\":");
      expression.toGenericStatement(builder);
      builder.append("}");
    }
  }

  public RecordId toRecordId(Result target, CommandContext ctx) {
    if (legacy || (expression == null && cluster != null && position != null)) {
      return new RecordId(cluster.value.intValue(), position.value.longValue());
    } else {
      var result = expression.execute(target, ctx);
      if (result == null) {
        return null;
      }
      if (result instanceof Identifiable) {
        return (RecordId) ((Identifiable) result).getIdentity();
      }
      if (result instanceof String) {
        return new RecordId((String) result);
      }
      return null;
    }
  }

  public RecordId toRecordId(Identifiable target, CommandContext ctx) {
    if (legacy || (expression == null && cluster != null && position != null)) {
      return new RecordId(cluster.value.intValue(), position.value.longValue());
    } else {
      var result = expression.execute(target, ctx);
      if (result == null) {
        return null;
      }
      if (result instanceof Identifiable) {
        return (RecordId) ((Identifiable) result).getIdentity();
      }
      if (result instanceof String) {
        return new RecordId((String) result);
      }
      return null;
    }
  }

  public SQLRid copy() {
    var result = new SQLRid(-1);
    result.cluster = cluster == null ? null : cluster.copy();
    result.position = position == null ? null : position.copy();
    result.expression = expression == null ? null : expression.copy();
    result.legacy = legacy;
    return result;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }

    var oRid = (SQLRid) o;

    if (!Objects.equals(cluster, oRid.cluster)) {
      return false;
    }
    if (!Objects.equals(position, oRid.position)) {
      return false;
    }
    if (!Objects.equals(expression, oRid.expression)) {
      return false;
    }
    return legacy == oRid.legacy;
  }

  @Override
  public int hashCode() {
    var result = cluster != null ? cluster.hashCode() : 0;
    result = 31 * result + (position != null ? position.hashCode() : 0);
    result = 31 * result + (expression != null ? expression.hashCode() : 0);
    return result;
  }

  public void setCluster(SQLInteger cluster) {
    this.cluster = cluster;
  }

  public void setPosition(SQLInteger position) {
    this.position = position;
  }

  public void setLegacy(boolean b) {
    this.legacy = b;
  }

  public SQLInteger getCluster() {
    if (expression != null) {
      var rid = toRecordId((Result) null, new BasicCommandContext());
      if (rid != null) {
        var result = new SQLInteger(-1);
        result.setValue(rid.getClusterId());
        return result;
      }
    }
    return cluster;
  }

  public SQLInteger getPosition() {
    if (expression != null) {
      var rid = toRecordId((Result) null, new BasicCommandContext());
      if (rid != null) {
        var result = new SQLInteger(-1);
        result.setValue(rid.getClusterPosition());
        return result;
      }
    }
    return position;
  }

  public Result serialize(DatabaseSessionInternal db) {
    var result = new ResultInternal(db);
    if (cluster != null) {
      result.setProperty("cluster", cluster.serialize(db));
    }
    if (position != null) {
      result.setProperty("position", position.serialize(db));
    }
    if (expression != null) {
      result.setProperty("expression", expression.serialize(db));
    }
    result.setProperty("legacy", legacy);
    return result;
  }

  public void deserialize(Result fromResult) {
    if (fromResult.getProperty("cluster") != null) {
      cluster = new SQLInteger(-1);
      cluster.deserialize(fromResult.getProperty("cluster"));
    }
    if (fromResult.getProperty("position") != null) {
      position = new SQLInteger(-1);
      position.deserialize(fromResult.getProperty("position"));
    }
    if (fromResult.getProperty("expression") != null) {
      expression = new SQLExpression(-1);
      expression.deserialize(fromResult.getProperty("expression"));
    }
    legacy = fromResult.getProperty("legacy");
  }
}
/* JavaCC - OriginalChecksum=c2c6d67d7722e29212e438574698d7cd (do not edit this line) */
