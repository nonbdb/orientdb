/* Generated By:JJTree: Do not edit this line. SQLSleepStatement.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=true,TRACK_TOKENS=true,NODE_PREFIX=O,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package com.jetbrains.youtrack.db.internal.core.sql.parser;

import com.jetbrains.youtrack.db.internal.core.command.CommandContext;
import com.jetbrains.youtrack.db.internal.core.sql.executor.ResultInternal;
import com.jetbrains.youtrack.db.internal.core.sql.executor.resultset.ExecutionStream;
import java.util.Map;
import java.util.Objects;

public class SQLSleepStatement extends SQLSimpleExecStatement {

  protected SQLInteger millis;

  public SQLSleepStatement(int id) {
    super(id);
  }

  public SQLSleepStatement(YouTrackDBSql p, int id) {
    super(p, id);
  }

  @Override
  public ExecutionStream executeSimple(CommandContext ctx) {
    var item = new ResultInternal(ctx.getDatabase());
    item.setProperty("operation", "sleep");
    try {
      Thread.sleep(millis.getValue().intValue());
      item.setProperty("result", "OK");
      item.setProperty("millis", millis.getValue().intValue());
    } catch (InterruptedException e) {
      item.setProperty("result", "failure");
      item.setProperty("errorType", e.getClass().getSimpleName());
      item.setProperty("errorMessage", e.getMessage());
    }
    return ExecutionStream.singleton(item);
  }

  @Override
  public void toString(Map<Object, Object> params, StringBuilder builder) {
    builder.append("SLEEP ");
    millis.toString(params, builder);
  }

  @Override
  public void toGenericStatement(StringBuilder builder) {
    builder.append("SLEEP ");
    millis.toGenericStatement(builder);
  }

  @Override
  public SQLSleepStatement copy() {
    var result = new SQLSleepStatement(-1);
    result.millis = millis == null ? null : millis.copy();
    return result;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }

    var that = (SQLSleepStatement) o;

    return Objects.equals(millis, that.millis);
  }

  @Override
  public int hashCode() {
    return millis != null ? millis.hashCode() : 0;
  }
}
/* JavaCC - OriginalChecksum=2ea765ee266d4215414908b0e09c0779 (do not edit this line) */
