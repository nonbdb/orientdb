/* Generated By:JJTree: Do not edit this line. SQLUpdateEdgeStatement.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=true,TRACK_TOKENS=true,NODE_PREFIX=O,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package com.jetbrains.youtrack.db.internal.core.sql.parser;

import com.jetbrains.youtrack.db.internal.core.command.CommandContext;
import com.jetbrains.youtrack.db.internal.core.sql.executor.UpdateExecutionPlan;
import com.jetbrains.youtrack.db.internal.core.sql.executor.UpdateExecutionPlanner;
import java.util.stream.Collectors;

public class SQLUpdateEdgeStatement extends SQLUpdateStatement {

  public SQLUpdateEdgeStatement(int id) {
    super(id);
  }

  public SQLUpdateEdgeStatement(YouTrackDBSql p, int id) {
    super(p, id);
  }

  protected String getStatementType() {
    return "UPDATE EDGE ";
  }

  @Override
  public UpdateExecutionPlan createExecutionPlan(CommandContext ctx, boolean enableProfiling) {
    var planner = new UpdateExecutionPlanner(this);
    var result = planner.createExecutionPlan(ctx, enableProfiling);
    result.setStatement(originalStatement);
    result.setGenericStatement(this.toGenericStatement());
    return result;
  }

  @Override
  public SQLUpdateEdgeStatement copy() {
    var result = new SQLUpdateEdgeStatement(-1);
    result.target = target == null ? null : target.copy();
    result.operations =
        operations == null
            ? null
            : operations.stream().map(x -> x.copy()).collect(Collectors.toList());
    result.upsert = upsert;
    result.returnBefore = returnBefore;
    result.returnAfter = returnAfter;
    result.returnProjection = returnProjection == null ? null : returnProjection.copy();
    result.whereClause = whereClause == null ? null : whereClause.copy();
    result.limit = limit == null ? null : limit.copy();
    result.timeout = timeout == null ? null : timeout.copy();
    return result;
  }
}
/* JavaCC - OriginalChecksum=496f32976ee84e3a3a89d1410dc134c5 (do not edit this line) */
