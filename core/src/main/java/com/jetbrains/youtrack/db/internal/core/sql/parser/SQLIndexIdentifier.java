/* Generated By:JJTree: Do not edit this line. SQLIndexIdentifier.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=true,TRACK_TOKENS=true,NODE_PREFIX=O,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package com.jetbrains.youtrack.db.internal.core.sql.parser;

import com.jetbrains.youtrack.db.internal.core.db.DatabaseSessionInternal;
import com.jetbrains.youtrack.db.api.query.Result;
import com.jetbrains.youtrack.db.internal.core.sql.executor.ResultInternal;
import java.util.Map;
import java.util.Objects;

public class SQLIndexIdentifier extends SimpleNode {

  public enum Type {
    INDEX,
    VALUES,
    VALUESASC,
    VALUESDESC
  }

  protected Type type;
  protected String indexNameString;
  protected SQLIndexName indexName;

  public SQLIndexIdentifier(int id) {
    super(id);
  }

  public SQLIndexIdentifier(YouTrackDBSql p, int id) {
    super(p, id);
  }

  public SQLIndexIdentifier(String indexName, Type type) {
    this.indexNameString = indexName;
    this.type = type;
  }

  public void toString(Map<Object, Object> params, StringBuilder builder) {
    switch (type) {
      case INDEX:
        builder.append("INDEX");
        break;
      case VALUES:
        builder.append("INDEXVALUES");
        break;
      case VALUESASC:
        builder.append("INDEXVALUESASC");
        break;
      case VALUESDESC:
        builder.append("INDEXVALUESDESC");
        break;
    }
    builder.append(":");
    if (indexNameString != null) {
      builder.append(indexNameString);
    } else {
      indexName.toString(params, builder);
    }
  }

  public void toGenericStatement(StringBuilder builder) {
    switch (type) {
      case INDEX:
        builder.append("INDEX");
        break;
      case VALUES:
        builder.append("INDEXVALUES");
        break;
      case VALUESASC:
        builder.append("INDEXVALUESASC");
        break;
      case VALUESDESC:
        builder.append("INDEXVALUESDESC");
        break;
    }
    builder.append(":");
    if (indexNameString != null) {
      builder.append(indexNameString);
    } else {
      indexName.toGenericStatement(builder);
    }
  }

  public String getIndexName() {
    if (indexName != null) {
      return indexName.toString();
    }
    return indexNameString;
  }

  public Type getType() {
    return type;
  }

  public SQLIndexIdentifier copy() {
    var result = new SQLIndexIdentifier(-1);
    result.type = type;
    result.indexNameString = indexNameString;
    result.indexName = indexName.copy();
    return result;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }

    var that = (SQLIndexIdentifier) o;

    if (type != that.type) {
      return false;
    }
    if (!Objects.equals(indexNameString, that.indexNameString)) {
      return false;
    }
    return Objects.equals(indexName, that.indexName);
  }

  @Override
  public int hashCode() {
    var result = type != null ? type.hashCode() : 0;
    result = 31 * result + (indexNameString != null ? indexNameString.hashCode() : 0);
    result = 31 * result + (indexName != null ? indexName.hashCode() : 0);
    return result;
  }

  public Result serialize(DatabaseSessionInternal db) {
    var result = new ResultInternal(db);
    result.setProperty("type", type.toString());
    result.setProperty("indexNameString", indexNameString);

    if (indexName != null) {
      result.setProperty("indexName", indexName.serialize(db));
    }
    return result;
  }

  public void deserialize(Result fromResult) {
    type = Type.valueOf(fromResult.getProperty("type"));
    indexNameString = fromResult.getProperty("indexNameString");

    if (fromResult.getProperty("indexName") != null) {
      indexName = new SQLIndexName(-1);
      indexName.deserialize(fromResult.getProperty("indexName"));
    }
  }

  public void setType(Type type) {
    this.type = type;
  }

  public void setIndexNameString(String indexNameString) {
    this.indexNameString = indexNameString;
  }

  public void setIndexName(SQLIndexName indexName) {
    this.indexName = indexName;
  }
}
/* JavaCC - OriginalChecksum=025f134fd4b27b84210738cdb6dd027c (do not edit this line) */
