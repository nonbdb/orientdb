/* Generated By:JJTree: Do not edit this line. SQLProfileStorageStatement.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=true,TRACK_TOKENS=true,NODE_PREFIX=O,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package com.jetbrains.youtrack.db.internal.core.sql.parser;

import com.jetbrains.youtrack.db.internal.common.listener.ProgressListener;
import com.jetbrains.youtrack.db.internal.core.command.CommandContext;
import com.jetbrains.youtrack.db.internal.core.record.impl.EntityImpl;
import com.jetbrains.youtrack.db.internal.core.sql.executor.ResultInternal;
import com.jetbrains.youtrack.db.internal.core.sql.executor.resultset.ExecutionStream;
import com.jetbrains.youtrack.db.internal.core.sql.query.SQLAsynchQuery;
import com.jetbrains.youtrack.db.internal.core.sql.query.SQLSynchQuery;
import java.util.Map;

public class SQLProfileStorageStatement extends SQLSimpleExecStatement {

  protected boolean on;

  public static final String KEYWORD_PROFILE = "PROFILE";

  public SQLProfileStorageStatement(int id) {
    super(id);
  }

  public SQLProfileStorageStatement(YouTrackDBSql p, int id) {
    super(p, id);
  }

  // new execution logic
  @Override
  public ExecutionStream executeSimple(CommandContext ctx) {
    var result = new ResultInternal(ctx.getDatabase());
    result.setProperty("operation", "optimize database");

    return ExecutionStream.singleton(result);
  }

  // old execution logic
  @Override
  public Object execute(
      SQLAsynchQuery<EntityImpl> request,
      CommandContext context,
      ProgressListener progressListener) {
    try {
      return getResult(request);
    } finally {
      if (request.getResultListener() != null) {
        request.getResultListener().end();
      }
    }
  }

  protected static Object getResult(SQLAsynchQuery<EntityImpl> request) {
    if (request instanceof SQLSynchQuery) {
      return ((SQLSynchQuery<EntityImpl>) request).getResult();
    }

    return null;
  }

  public void toString(Map<Object, Object> params, StringBuilder builder) {
    builder.append("PROFILE STORAGE ");
    builder.append(on ? "ON" : "OFF");
  }

  public void toGenericStatement(StringBuilder builder) {
    builder.append("PROFILE STORAGE ");
    builder.append(on ? "ON" : "OFF");
  }

  @Override
  public SQLProfileStorageStatement copy() {
    var result = new SQLProfileStorageStatement(-1);
    result.on = on;
    return result;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }

    var that = (SQLProfileStorageStatement) o;

    return on == that.on;
  }

  @Override
  public int hashCode() {
    return (on ? 1 : 0);
  }
}

/* JavaCC - OriginalChecksum=645887712797ae14a17820bfa944f78e (do not edit this line) */
